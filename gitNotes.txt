 

when in the root directory of a project, you can create a git repository using the command
    $ git init

set your user details in orderr to commit changes. 
    $ git config --global user.name "nathanael joseph"
    $ git config --global user.email "nathanaeljy@outlook.com"

Check which files have been staged, which have been commited, and which are not being tracked:
    $ git status

Add the unstaged files
    $ git add [filename]
You can add all files using
    $ git add *

to unstage a change, run
    $ git reset HEAD [filename]

Commit staged changes with 
    $ git commit -m "the commit message"
commit messages should follow the convention "this commit will [message]"
Staged changes are commited to the current branch, which is "master" by default.

to check the changes made
    $ git diff
to check the staged changes, use:
    $ git diff --staged

to remove a file from the working directory and stage the deletion:
    $ git rm [filename]
then commit the deletion.

Files can be moved from one folder to another, or renamed with:
    $ git mv [current filename] [new filename]
git mv will stage this change, and it can then be commited. 

To discard the changes made to an unstaged file, and revert it to the last commit, use:
    $ git checkout -- [filename]
this can also be used to restore a deleted file. 

See commit history using:
    $ git log
from here, you can copy the hash of commits for later use in git revert. 
(only the first 5 characters are required.)

To revert the project to a previous commit:
    $ git revert [commitSHA]
this will create a new commit. 

To revert to the last commit:
    $ git revert HEAD 





